name: CI/CD Pipeline

on:
  push:
    branches:
      - debug-loop-logging-fix
      - fix-cloud-init-version
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Clear pip cache
      run: |
        pip cache purge

    - name: Clear GitHub Actions cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsystemd-dev meson

    - name: Install Cython
      run: |
        python -m pip install --upgrade pip
        pip install cython

    - name: Print requirements.txt
      run: |
        cat requirements.txt

    - name: Install dependencies
      run: |
        pip install -r requirements.txt --verbose

    - name: Print flake8 configuration
      run: |
        cat .flake8

    - name: Print last commit hash
      run: |
        git log -1 --pretty=format:"%H"

    - name: Uninstall existing flake8 and plugins
      run: |
        pip uninstall -y flake8 flake8-per-file-ignores mccabe pycodestyle pyflakes

    - name: Install flake8 and compatible plugins
      run: |
        pip install flake8==4.0.1
        pip install mccabe==0.6.1
        pip install pycodestyle==2.8.0
        pip install pyflakes==2.4.0

    - name: Print flake8 configuration before linting
      run: |
        cat .flake8

    - name: Lint with flake8
      run: |
        flake8 --version
        flake8 --bug-report
        flake8 --config .flake8 .

    - name: Print flake8 output
      run: |
        flake8 --config .flake8 . || true

    - name: Set PYTHONPATH
      run: |
        echo "PYTHONPATH=$PYTHONPATH:$(pwd):$(pwd)/scripts:$(pwd)/redteam-agent" >> $GITHUB_ENV

    - name: Install pytest
      run: |
        pip install pytest

    - name: Install Chrome and ChromeDriver
      run: |
        sudo apt-get install -y wget unzip
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
        echo "Chrome version: $CHROME_VERSION"
        CHROMEDRIVER_VERSION=$(curl -sS --retry 5 --retry-delay 10 https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$(echo $CHROME_VERSION | cut -d '.' -f 1))
        echo "ChromeDriver version: $CHROMEDRIVER_VERSION"
        CHROMEDRIVER_URL="https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
        echo "ChromeDriver URL: $CHROMEDRIVER_URL"
        wget -N --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 $CHROMEDRIVER_URL
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver

    - name: Run tests with pytest
      run: |
        pytest
